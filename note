export function extractContactsFromText(text) {
  const contacts = [];

  const lines = text
    .split(/\n+/)
    .map((line) => line.trim())
    .filter((line) => line.length > 0);

  console.log(`Total lines: ${lines.length}`);

  for (let i = 0; i < lines.length; i++) {
    if (/^FL\d{5}$/.test(lines[i])) {
      const memberId = lines[i];
      let name = "";
      let phone = "";
      let email = "";

      // scan ahead until the next memberId
      for (let j = i + 1; j < lines.length; j++) {
        if (/^FL\d{5}$/.test(lines[j])) {
          break;
        }

        if (
          !name &&
          /^[A-Z\s.'-]{4,}$/.test(lines[j]) &&
          lines[j] !== "FELLOW"
        ) {
          name = lines[j];
        } else if (!phone && /^[0-9]{10,11}$/.test(lines[j])) {
          phone = lines[j];
        } else if (
          !email &&
          /\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[a-z]{2,}\b/i.test(lines[j])
        ) {
          email = lines[j];
        }
      }

      contacts.push({
        memberId,
        name: name ? cleanName(name) : "Unknown",
        phone,
        email,
      });
    }
  }

  console.log(`Extracted ${contacts.length} contacts`);
  console.log("Sample:", contacts.slice(0, 5));
  return contacts;
}

function cleanName(name) {
  return name
    .replace(/\s+/g, " ")
    .trim()
    .split(" ")
    .map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())
    .join(" ");
}
